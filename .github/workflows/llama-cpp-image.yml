name: Build and Push Custom Docker Image

on:
  # 1. Allow manual triggering from the GitHub Actions UI
  workflow_dispatch:

  # 2. Trigger on pushes to the main branch that affect the 'llama.cpp' folder
  push:
    branches:
      - main
    paths:
      - 'llama.cpp/**'

# Use environment variables for consistency with your other workflows
env:
  # Set the image name based on the repository name
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Set permissions for pushing to the GitHub Container Registry
    permissions:
      contents: read
      packages: write

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 3. Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: 4. Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          # Set the build context to the llama.cpp directory
          context: ./llama.cpp
          # Point to the Dockerfile within the llama.cpp directory
          file: ./llama.cpp/Dockerfile
          push: true
          # Use tags generated by the metadata action (e.g., latest, git sha)
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Use the GitHub Actions cache for Docker layers to speed up builds
          cache-from: type=gha
          cache-to: type=gha,mode=max