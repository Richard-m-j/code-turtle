# .github/workflows/reusable-review.yml
# This is the main, reusable workflow that performs the code review.

name: Reusable AI Code Review

on:
  workflow_call:
    inputs:
      pr_number:
        description: 'The number of the pull request'
        required: true
        type: number
      base_sha:
        description: 'The base SHA of the pull request'
        required: true
        type: string
      head_sha:
        description: 'The head SHA of the pull request'
        required: true
        type: string

permissions:
  contents: read
  pull-requests: write

jobs:
  code-review:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    # Use a pre-built Docker container with llama.cpp already compiled.
    container: yusiwen/llama.cpp:latest

    env:
      MODEL_URL: 'https://huggingface.co/QuantFactory/Meta-Llama-3-8B-Instruct-GGUF/resolve/main/Meta-Llama-3-8B-Instruct.Q4_K_M.gguf'

    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 2. Generate Model URL Hash
        id: model_hash
        run: echo "hash=$(echo -n '${{ env.MODEL_URL }}' | sha256sum | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: 3. Cache AI Model
        id: cache-model
        uses: actions/cache@v4
        with:
          path: ./model.gguf
          key: ${{ runner.os }}-gguf-model-${{ steps.model_hash.outputs.hash }}

      - name: 4. Download AI Model if not cached
        if: steps.cache-model.outputs.cache-hit != 'true'
        run: curl -L -o ./model.gguf "${{ env.MODEL_URL }}"

      - name: 5. Install Git
        run: |
          apt-get update
          apt-get install -y git

      - name: 6. Generate code diff
        id: generate_diff
        run: |
          git fetch --prune --unshallow || true
          git diff ${{ inputs.base_sha }} ${{ inputs.head_sha }} > diff.txt
          if [ ! -s diff.txt ]; then
            echo "No code changes detected. Skipping review."
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
            echo "Diff generated successfully. Size: $(wc -c < diff.txt) bytes"
          fi

      - name: 7. Construct Prompt
        if: steps.generate_diff.outputs.skip == 'false'
        run: |
          PROMPT_FILE="prompt.txt"
          SYSTEM_PROMPT="You are an expert code reviewer AI. Your task is to analyze the following code diff and provide concise, constructive feedback. Focus on potential bugs, logical errors, style violations, and areas for improved clarity or performance. Do not comment on trivial changes. Frame your feedback as helpful suggestions. Output your review in Markdown format."

          # Use a HEREDOC to create the prompt file cleanly.
          cat <<EOF > $PROMPT_FILE
          $SYSTEM_PROMPT

          Here is the code diff to review:
          \`\`\`diff
          $(cat diff.txt)
          \`\`\`

          Please provide your review now.
          EOF

      - name: 8. Run LLM Inference
        if: steps.generate_diff.outputs.skip == 'false'
        run: |
          echo "Starting LLM inference... This may take a few minutes."
          # Use the llama-cli executable from the Docker container.
          /llama.cpp/llama-cli \
            -m ./model.gguf \
            -f prompt.txt \
            --ctx-size 4096 \
            --n-predict 1024 \
            --temp 0.2 \
            > review_output.txt
          echo "LLM inference complete."

      - name: 9. Format and Post Comment
        if: steps.generate_diff.outputs.skip == 'false'
        env:
          # GITHUB_TOKEN is automatically available to the runner.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ inputs.pr_number }}
        run: |
          # The GitHub CLI (gh) is pre-installed on GitHub-hosted runners.
          COMMENT_BODY=$(cat <<EOF
          ### ðŸ¤– AI Code Review

          Here are some suggestions based on the latest changes. Please treat these as pointers for consideration, not mandates.

          ---

          $(cat review_output.txt)
          EOF
          )
          
          gh pr comment $PR_NUMBER --body "$COMMENT_BODY"